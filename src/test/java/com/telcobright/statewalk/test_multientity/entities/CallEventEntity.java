package com.telcobright.statewalk.test_multientity.entities;

import com.telcobright.core.entity.ShardingEntity;
import com.telcobright.core.annotation.*;
import java.time.LocalDateTime;

/**
 * CallEvent entity - child of Call, references machine ID
 */
@Table(name = "call_event_entities")
public class CallEventEntity implements ShardingEntity {

    @Id(autoGenerated = false)
    @Column(name = "id")
    private String id; // Unique event ID

    @ShardingKey
    @Column(name = "created_at")
    private LocalDateTime createdAt;

    @Column(name = "call_id")
    private String callId; // References the machine ID

    @Column(name = "event_type")
    private String eventType;

    @Column(name = "event_data")
    private String eventData;

    @Column(name = "timestamp")
    private LocalDateTime timestamp;

    public CallEventEntity() {
        this.id = java.util.UUID.randomUUID().toString();
        this.createdAt = LocalDateTime.now();
        this.timestamp = LocalDateTime.now();
    }

    public CallEventEntity(String eventType, String eventData) {
        this();
        this.eventType = eventType;
        this.eventData = eventData;
    }

    // ShardingEntity implementation
    @Override
    public String getId() {
        return id;
    }

    @Override
    public void setId(String id) {
        this.id = id;
    }

    @Override
    public LocalDateTime getCreatedAt() {
        return createdAt;
    }

    @Override
    public void setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
    }

    // Getters and setters
    public String getCallId() {
        return callId;
    }

    public void setCallId(String callId) {
        this.callId = callId; // This will be the machine ID
    }

    public String getEventType() {
        return eventType;
    }

    public void setEventType(String eventType) {
        this.eventType = eventType;
    }

    public String getEventData() {
        return eventData;
    }

    public void setEventData(String eventData) {
        this.eventData = eventData;
    }

    public LocalDateTime getTimestamp() {
        return timestamp;
    }

    public void setTimestamp(LocalDateTime timestamp) {
        this.timestamp = timestamp;
    }
}