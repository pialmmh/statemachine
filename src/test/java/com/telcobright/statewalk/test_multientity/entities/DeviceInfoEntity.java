package com.telcobright.statewalk.test_multientity.entities;

import com.telcobright.core.entity.ShardingEntity;
import com.telcobright.core.annotation.*;
import java.time.LocalDateTime;

/**
 * DeviceInfo entity - Singleton per machine but still uses machine ID
 * This ensures singleton behavior within a machine's graph while maintaining ID consistency
 */
@Table(name = "device_info_entities")
@Singleton(key = "device_info")
public class DeviceInfoEntity implements ShardingEntity {

    @Id(autoGenerated = false)
    @Column(name = "id")
    private String id; // MUST be same as machine ID (even though singleton)

    @ShardingKey
    @Column(name = "created_at")
    private LocalDateTime createdAt;

    @Column(name = "device_type")
    private String deviceType; // MOBILE, LANDLINE, VOIP, SOFTPHONE

    @Column(name = "manufacturer")
    private String manufacturer;

    @Column(name = "model")
    private String model;

    @Column(name = "os_version")
    private String osVersion;

    @Column(name = "app_version")
    private String appVersion;

    @Column(name = "imei")
    private String imei;

    @Column(name = "imsi")
    private String imsi;

    @Column(name = "network_operator")
    private String networkOperator;

    @Column(name = "network_type")
    private String networkType; // 3G, 4G, 5G, WIFI

    @Column(name = "last_seen")
    private LocalDateTime lastSeen;

    @Column(name = "location")
    private String location;

    public DeviceInfoEntity() {
        this.createdAt = LocalDateTime.now();
        this.lastSeen = LocalDateTime.now();
        this.deviceType = "MOBILE";
        this.networkType = "4G";
    }

    public DeviceInfoEntity(String machineId) {
        this();
        this.id = machineId; // Set to machine ID even though singleton
    }

    public DeviceInfoEntity(String machineId, String deviceType, String model) {
        this(machineId);
        this.deviceType = deviceType;
        this.model = model;
    }

    // ShardingEntity implementation
    @Override
    public String getId() {
        return id;
    }

    @Override
    public void setId(String id) {
        this.id = id; // Machine ID
    }

    @Override
    public LocalDateTime getCreatedAt() {
        return createdAt;
    }

    @Override
    public void setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
    }

    // Helper methods
    public boolean isMobile() {
        return "MOBILE".equals(deviceType);
    }

    public boolean isVoIP() {
        return "VOIP".equals(deviceType);
    }

    public void updateLastSeen() {
        this.lastSeen = LocalDateTime.now();
    }

    // Getters and setters
    public String getDeviceType() {
        return deviceType;
    }

    public void setDeviceType(String deviceType) {
        this.deviceType = deviceType;
    }

    public String getManufacturer() {
        return manufacturer;
    }

    public void setManufacturer(String manufacturer) {
        this.manufacturer = manufacturer;
    }

    public String getModel() {
        return model;
    }

    public void setModel(String model) {
        this.model = model;
    }

    public String getOsVersion() {
        return osVersion;
    }

    public void setOsVersion(String osVersion) {
        this.osVersion = osVersion;
    }

    public String getAppVersion() {
        return appVersion;
    }

    public void setAppVersion(String appVersion) {
        this.appVersion = appVersion;
    }

    public String getImei() {
        return imei;
    }

    public void setImei(String imei) {
        this.imei = imei;
    }

    public String getImsi() {
        return imsi;
    }

    public void setImsi(String imsi) {
        this.imsi = imsi;
    }

    public String getNetworkOperator() {
        return networkOperator;
    }

    public void setNetworkOperator(String networkOperator) {
        this.networkOperator = networkOperator;
    }

    public String getNetworkType() {
        return networkType;
    }

    public void setNetworkType(String networkType) {
        this.networkType = networkType;
    }

    public LocalDateTime getLastSeen() {
        return lastSeen;
    }

    public void setLastSeen(LocalDateTime lastSeen) {
        this.lastSeen = lastSeen;
    }

    public String getLocation() {
        return location;
    }

    public void setLocation(String location) {
        this.location = location;
    }

    @Override
    public String toString() {
        return String.format("DeviceInfo[id=%s, type=%s, %s %s, %s]",
            id, deviceType, manufacturer, model, networkType);
    }
}