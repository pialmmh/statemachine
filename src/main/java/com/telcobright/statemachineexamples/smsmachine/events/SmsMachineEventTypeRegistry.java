package com.telcobright.statemachineexamples.smsmachine.events;

import java.util.HashMap;
import java.util.Map;

import com.telcobright.statemachine.events.StateMachineEvent;

/**
 * Registry to map smsmachine event classes to their event type strings
 * Generated by State Machine Scaffolder
 */
public class SmsMachineEventTypeRegistry {
    private static final Map<Class<? extends StateMachineEvent>, String> EVENT_TYPE_MAP = new HashMap<>();
    
    static {
        // Register all smsmachine-related event types
        EVENT_TYPE_MAP.put(SendAttempt.class, SendAttempt.EVENT_TYPE);
        EVENT_TYPE_MAP.put(DeliveryReport.class, DeliveryReport.EVENT_TYPE);
        EVENT_TYPE_MAP.put(SendFailed.class, SendFailed.EVENT_TYPE);
        EVENT_TYPE_MAP.put(StatusUpdate.class, StatusUpdate.EVENT_TYPE);
        EVENT_TYPE_MAP.put(Retry.class, Retry.EVENT_TYPE);
    }
    
    /**
     * Get event type string for a smsmachine event class
     */
    public static String getEventType(Class<? extends StateMachineEvent> eventClass) {
        String eventType = EVENT_TYPE_MAP.get(eventClass);
        if (eventType != null) {
            return eventType;
        }
        
        // Fallback to class name if not registered
        return eventClass.getSimpleName().toUpperCase();
    }
    
    /**
     * Register a new smsmachine event type
     */
    public static void register(Class<? extends StateMachineEvent> eventClass, String eventType) {
        EVENT_TYPE_MAP.put(eventClass, eventType);
    }
    
    /**
     * Check if an event class is registered in this smsmachine domain
     */
    public static boolean isSmsMachineEvent(Class<? extends StateMachineEvent> eventClass) {
        return EVENT_TYPE_MAP.containsKey(eventClass);
    }
}